@model Ru.GameSchool.DataLayer.Repository.LevelMaterial

@if (!string.IsNullOrWhiteSpace(ViewBag.SuccessMessage))
{
    <div class="alert alert-success">
        <button class="close" data-dismiss="alert">
            ×</button>
        <strong>Tókst!</strong> @ViewBag.SuccessMessage
    </div>
}
@if (!string.IsNullOrWhiteSpace(ViewBag.ErrorMessage))
{
    <div class="alert alert-error">
        <button class="close" data-dismiss="alert">
            ×</button>
        <strong>Villa!</strong> @ViewBag.ErrorMessage
    </div>
}

@* TODO: CHECK SYNTAX @using (Html.BeginForm("Edit", "Material", arg, FormMethod.Post, new { @class = "form-horizontal" }))*@
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Kennslugagn</legend>
        @Html.HiddenFor(m => m.LevelMaterialId)
        <div class="control-group">
            @Html.LabelFor(m => m.Title, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(m => m.Title, new { @class="input-xlarge", rel="popover" })
                <span class="help-inline">@Html.ValidationMessageFor(m => m.Title)</span>
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(m => m.LevelId, new { @class = "control-label" })
            <div class="controls">
                @Html.DropDownListFor(m => m.LevelId, new SelectList(ViewBag.LevelCount, "Value", "Text"))
                <span class="help-inline">@Html.ValidationMessageFor(m => m.LevelId)</span>
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(m => m.ContentTypeId, new { @class = "control-label" })
            <div class="controls">
                @Html.DropDownListFor(m => m.ContentTypeId, new SelectList(ViewBag.ContentTypes, "ContentTypeId", "Name"))
                <span class="help-inline">@Html.ValidationMessageFor(m => m.ContentTypeId)</span>
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(m => m.Url, new { @class = "control-label" })
            <div class="controls">
                @Html.TextBoxFor(m => m.Url, new { type = "file", @class = "input-file", rel = "popover" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(m => m.Description, new { @class = "control-label", @for="textarea" })
            <div class="controls">
                @Html.EditorFor(m => m.Description, new { @class="input-xlarge", rel="popover", rows="3" })
            </div>
        </div>

        <div class="control-group">
            <div class="controls">
                <button type="submit" class="btn btn-success" >Uppfæra kennslugagn</button>
            </div>
        </div>
    </fieldset>
}