@model Ru.GameSchool.DataLayer.Repository.LevelExam

<h2>@ViewBag.Title</h2>
@if (!string.IsNullOrWhiteSpace(ViewBag.SuccessMessage))
{
    <div class="alert alert-success">
        <button class="close" data-dismiss="alert">
            ×</button>
        <strong>Tókst!</strong> @ViewBag.SuccessMessage
    </div>
}
@if (!string.IsNullOrWhiteSpace(ViewBag.ErrorMessage))
{
    <div class="alert alert-error">
        <button class="close" data-dismiss="alert">
            ×</button>
        <strong>Villa!</strong> @ViewBag.ErrorMessage
    </div>
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>
@using (Html.BeginForm("Edit", "Exam", FormMethod.Post))
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Próf</legend>
        @Html.HiddenFor(model => model.LevelExamId)
        <div class="control-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label" })
            <div class="controls">
                @Html.TextAreaFor(model => model.Name, new { @class = "input-xlarge" })
                <span class="help-inline">@Html.ValidationMessageFor(model => model.Name)</span>
            </div>
        </div>
        <div class="control-group">
            @Html.LabelFor(model => model.LevelId, new { @class = "control-label" })
            <div class="controls">
                @Html.DropDownListFor(model => model.LevelId, new SelectList(ViewBag.LevelCount, "Value", "Text"))
                <span class="help-inline">@Html.ValidationMessageFor(x => x.LevelId)</span>
            </div>
        </div>
        <div class="control-group">
            @Html.LabelFor(model => model.GradePercentageValue, new { @class = "control-label" })
            <div class="controls">
                @Html.DropDownList("GradePercentageValue")
                <span class="help-inline">@Html.ValidationMessageFor(model => model.GradePercentageValue)</span>
            </div>
            <div class="control-group">
                @Html.LabelFor(model => model.Description, new { @class = "control-label" })
                <div class="controls">
                    @Html.TextAreaFor(model => model.Description, new { @class = "input-xlarge", type = "multiline", rows = "10", cols = "30" })
                    <span class="help-inline">@Html.ValidationMessageFor(model => model.Description)</span>
                </div>
            </div>
            <p>
                <div class="control-group">
                    <div class="controls">
                        <button type="submit" value="Save" class="btn btn-success">
                            <i class="icon-ok icon-white"></i>Breyta prófi
                        </button>
                    </div>
                </div>
            </p>
    </fieldset>
}

@Html.ActionLink("Spurningar", "ExamQuestions", new { id = Model.LevelExamId }, null)

@using (Html.BeginForm("CreateQuestion", "Exam", FormMethod.Post))
{
    <fieldset>
        <legend>Ný spurning</legend>
        @Html.HiddenFor(model => model.LevelExamId)
        <div class="control-group">
            <label for="" class="control-label"></label>
            <div class="controls">
                @Html.TextBox("examQuestion", "", new { @class = "input-xlarge" });
                @Html.TextAreaFor(model => model.Name, new { @class = "input-xlarge" })
                <span class="help-inline">@Html.ValidationMessageFor(model => model.Name)</span>
            </div>
        </div>
    </fieldset>    
}

<div>
    @Html.ActionLink("Aftur á forsíðu prófa", "Index")
</div>
