@model Ru.GameSchool.DataLayer.Repository.LevelExam
@{
    ViewBag.Title = "Breyta prófi";
}

@if (!string.IsNullOrWhiteSpace(ViewBag.SuccessMessage))
{
    <div class="alert alert-success">
        <button class="close" data-dismiss="alert">
            ×</button>
        <strong>Tókst!</strong> @ViewBag.SuccessMessage
    </div>
}
@if (!string.IsNullOrWhiteSpace(ViewBag.ErrorMessage))
{
    <div class="alert alert-error">
        <button class="close" data-dismiss="alert">
            ×</button>
        <strong>Villa!</strong> @ViewBag.ErrorMessage
    </div>
}
@using (Html.BeginForm("Edit", "Exam", FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Breyta prófi</legend>
        @Html.HiddenFor(model => model.LevelExamId)
        <div class="control-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label" })
            <div class="controls">
                @Html.TextBoxFor(model => model.Name, new { @class = "input-xlarge" })
                <span class="help-inline">@Html.ValidationMessageFor(model => model.Name)</span>
            </div>
        </div>
        <div class="control-group">
            @Html.LabelFor(model => model.LevelId, new { @class = "control-label" })
            <div class="controls">
                @Html.DropDownListFor(model => model.LevelId, (IEnumerable<SelectListItem>)ViewBag.Levels, "Veldu borð")
                <span class="help-inline">@Html.ValidationMessageFor(x => x.LevelId)</span>
            </div>
        </div>
        <div class="control-group">
            @Html.LabelFor(model => model.GradePercentageValue, new { @class = "control-label" })
            <div class="controls">
                @Html.DropDownListFor(model => model.GradePercentageValue, (IEnumerable<SelectListItem>)ViewBag.GradePercentageValue, "Veldu prósentu")
                <span class="help-inline">@Html.ValidationMessageFor(model => model.GradePercentageValue)</span>
            </div>
        </div>
        <div class="control-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label" })
            <div class="controls">
                @Html.TextAreaFor(model => model.Description, new { @class = "input-xlarge", type = "multiline", rows = "6", cols = "20" })
                <span class="help-inline">@Html.ValidationMessageFor(model => model.Description)</span>
            </div>
        </div>
        <div class="control-group">
            @Html.LabelFor(x => x.Start, new { @class = "control-label" })
            <div class="controls">
                @Html.TextBoxFor(x => x.Start, new { @class = "input-xlarge", @data_datepicker = "datepicker" })
                <span class="help-inline">@Html.ValidationMessageFor(x => x.Start)</span>
            </div>
        </div>
        <div class="control-group">
            @Html.LabelFor(x => x.Stop, new { @class = "control-label" })
            <div class="controls">
                @Html.TextBoxFor(x => x.Stop, new { @class = "input-xlarge", @data_datepicker = "datepicker" })
                <span class="help-inline">@Html.ValidationMessageFor(x => x.Stop)</span>
            </div>
        </div>
            <div class="form-actions">
                    <button type="submit" value="Save" class="btn btn-primary">
                        Vista breytingar á prófi
                    </button>
                    @Html.ActionLink("Búa til spurningar", "ExamQuestions", new { id = Model.LevelExamId }, new { @class="btn btn-inverse" })
                    @Html.ActionLink("Fara í lista yfir próf", "Index", new { id = Model.Level.CourseId }, new { @class = " btn" })
            </div>
    </fieldset>
}

