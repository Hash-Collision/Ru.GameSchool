<<<<<<< HEAD
﻿@model Ru.GameSchool.DataLayer.Repository.LevelProjectResult

@{
    ViewBag.Title = "GradeProject";
}

<h2>GradeProject</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>LevelProjectResult</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.LevelProjectId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LevelProjectId)
            @Html.ValidationMessageFor(model => model.LevelProjectId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.UserInfoId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UserInfoId)
            @Html.ValidationMessageFor(model => model.UserInfoId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Grade)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Grade)
            @Html.ValidationMessageFor(model => model.Grade)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CreateDateTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CreateDateTime)
            @Html.ValidationMessageFor(model => model.CreateDateTime)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.TeacherFeedback)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.TeacherFeedback)
            @Html.ValidationMessageFor(model => model.TeacherFeedback)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.UserFeedback)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UserFeedback)
            @Html.ValidationMessageFor(model => model.UserFeedback)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.GradeDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.GradeDate)
            @Html.ValidationMessageFor(model => model.GradeDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ContentID)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ContentID)
            @Html.ValidationMessageFor(model => model.ContentID)
        </div>

        @Html.HiddenFor(model => model.LevelProjectResultId)

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
=======
﻿@model Ru.GameSchool.DataLayer.Repository.LevelProjectResult

@{
    ViewBag.Title = "GradeProject";
}

<h2>GradeProject</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>LevelProjectResult</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.LevelProjectId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LevelProjectId)
            @Html.ValidationMessageFor(model => model.LevelProjectId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.UserInfoId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UserInfoId)
            @Html.ValidationMessageFor(model => model.UserInfoId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Grade)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Grade)
            @Html.ValidationMessageFor(model => model.Grade)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CreateDateTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CreateDateTime)
            @Html.ValidationMessageFor(model => model.CreateDateTime)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.TeacherFeedback)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.TeacherFeedback)
            @Html.ValidationMessageFor(model => model.TeacherFeedback)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.UserFeedback)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UserFeedback)
            @Html.ValidationMessageFor(model => model.UserFeedback)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.GradeDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.GradeDate)
            @Html.ValidationMessageFor(model => model.GradeDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ContentID)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ContentID)
            @Html.ValidationMessageFor(model => model.ContentID)
        </div>

        @Html.HiddenFor(model => model.LevelProjectResultId)

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
>>>>>>> 2aa6d6c5f5aba96bba6a60829077459c4ba5c811
